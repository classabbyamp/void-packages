name: 'Cycle Check'

on:
  schedule:
    - cron: '0 18 * * *'
  pull_request:
    paths:
      - 'srcpkgs/**'

jobs:
  cycles:
    runs-on: ubuntu-latest
    # run only if on the main repo or on pull requests
    if: ${{ github.event_name == 'pull_request' || github.repository_owner == 'void-linux' }}
    permissions:
      # this will only apply to scheduled runs
      # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
      issues: write
    container:
      image: 'ghcr.io/void-linux/void-buildroot-musl:20230904R2'
      env:
        PATH: '/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'
    steps:
      - name: Prepare container
        run: |
          # switch to repo-ci mirror
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          # Sync and upgrade once, assume error comes from xbps update
          xbps-install -Syu || xbps-install -yu xbps
          # Upgrade again (in case there was a xbps update)
          xbps-install -yu
          # Install script dependencies
          xbps-install -y python3-networkx nodejs

      - name: Clone and checkout
        uses: classabbyamp/treeless-checkout-action@v1

      - name: Create hostrepo and prepare masterdir
        run: |
          ln -s "$(pwd)" /hostrepo &&
          common/travis/set_mirror.sh &&
          common/travis/prepare.sh
      - name: Load cached dependencies
        id: cache-restore
        uses: actions/cache/restore@v2
        with:
          key: xbps-cycles
          path: /xbps-cycles
      - name: Find cycles
        run: |
          mkdir -p /xbps-cycles
          common/scripts/xbps-cycles.py -c /xbps-cycles | tee cycles
      - name: Save cached dependencies
        if: ${{ github.event_name == 'schedule' }}
        uses: actions/cache/save@v2
        with:
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: /xbps-cycles
      - name: Open issues
        if: ${{ github.event_name == 'schedule' }}
        run: |
          xbps-install -y github-cli
          grep 'Cycle:' cycles | while read -r line; do
              if gh issue list -R "$GITHUB_REPOSITORY" -S "$line" | grep .; then
                  printf "Issue on '%s' already exists.\n" "$line"
              else
                  gh issue create -R "$GITHUB_REPOSITORY" -b '' -t "$line"
              fi
          done
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
      - name: Summary
        run: |
          if grep -q '^Cycle:' cycles; then
            echo "Build cycles found:"
            rv=1
          else
            echo "No cycles found:"
            rv=0
          fi
          cat cycles
          exit $rv
